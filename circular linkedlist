#include<iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;


    Node(int data){
        this->data = data;
        this->next = NULL;

    }

    
      ~Node(){
        int value =  this->data;
        if(this->next != NULL){
            this->next = NULL;
            delete next;
        }
        cout<<" memory is free from the data "<<value<<endl;
      }

};

 void insertatposition(Node* & tail,int element ,int d){
    if(tail == NULL){
        Node* newnode= new Node(d);
        tail = newnode;
        newnode->next = newnode;

    }
    else{
        //non-empty list

        Node* curr = tail;
        while(curr->data!=element){
            curr=curr->next;
        }
         
   //node found ho gaya toh new node banaugi
   Node*temp = new Node(d);
   temp->next = curr->next;
   curr->next =  temp;

    }
 }

 void deletevalue(Node* &tail,int value){
    if(tail==NULL){
        cout<<" tail is empty "<<endl;
        return ;
    }
    else{
        //non-empty
          Node*prev=tail;
          Node*curr = prev->next;

          while(curr->data!=value){
            prev = curr;
            curr = curr->next;
          }

          prev->next=curr->next;
// 1 node linked listb
if(curr==prev){
    tail = NULL;
}


          if(tail==curr){
            tail = prev;
          }
          curr->next = NULL;
          delete curr;

    }
 }

 void print(Node*&tail){
    Node* temp = tail;

    if(tail==NULL){
        cout<<" node is mepty"<<endl;
        return ;
    }
    do{
        cout<<tail->data<<" ";
        tail= tail->next;
    }
    while(tail->next!=temp);
        
    cout<<endl;
 }

 int main(){
    Node*tail = NULL;
    insertatposition(tail,5,3);
    print(tail);


   insertatposition(tail,3,5);
    print(tail);

insertatposition(tail,5,6);
    print(tail);

insertatposition(tail,6,12);
    print(tail);


   insertatposition(tail,12,15);
    print(tail);

    insertatposition(tail,15,26);
    print(tail);

    insertatposition(tail,26,46);
    print(tail);

deletevalue(tail,6);
print(tail);


    return 0;
 }
